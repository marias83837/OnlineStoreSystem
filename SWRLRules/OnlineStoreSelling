Individual(?x) ^ hasBelief(?x, ?belief) -> Belief(?x, ?belief)
Belief(?x, ?belief1) ^ supports(?belief1, ?belief2) ^ not(Belief(?x, ?belief2)) -> Belief(?x, ?belief2)
Belief(?x, ?belief1) ^ Belief(?x, ?belief2) ^ contradicts(?belief1, ?belief2) -> Contradiction(?x, ?belief1, ?belief2)
hasBelief(StoreA, PositiveReviews(Product)) ^ supports(PositiveReviews(Product), HighQuality(Product)) -> hasBelief(StoreA, HighQuality(Product))
hasBelief(StoreB, FrequentlyPurchased(Product)) ^ supports(FrequentlyPurchased(Product), Popular(Product)) -> hasBelief(StoreB, Popular(Product))
hasBelief(StoreA, HighQuality(Product)) -> hasBelief(StoreB, HighQuality(Product))
hasBelief(StoreA, FrequentlyPurchased(Product)) ^ supports(FrequentlyPurchased(Product), Popular(Product)) -> hasBelief(StoreA, Popular(Product))
hasBelief(StoreB, PositiveReviews(Product)) ^ supports(PositiveReviews(Product), HighQuality(Product)) -> hasBelief(StoreB, HighQuality(Product))
